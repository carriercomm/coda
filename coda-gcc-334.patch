On Tue, Jun 22, 2004 at 10:41:07PM -0400, Guest user via RT wrote:
> And now, with gcc-3.3.4, and kernel 2.6.7:
> 
> i686-pld-linux-g++ -fno-exceptions -fcheck-new -Wall -MD -DHAVE_CONFIG_H
> -I. -I/home/users/aredridel/rpm/BUILD/coda-6.0.6/include
> -I/home/users/aredridel/rpm/BUILD/coda-6.0.6 -O2 -march=i686 -ggdb
> -DVENUS -DTIMING -DVENUSDEBUG -DRVM_USELWP   -c -o adv_monitor.o
> adv_monitor.cc
> In file included from adv_monitor.h:24,
>                  from adv_monitor.cc:19:
> fso.h:542: error: using typedef-name `HoardFetchState' after `enum'
> fso.h:543: error: ISO C++ forbids declaration of `new_state' with no type
> fso.h:550: error: using typedef-name `HoardAskState' after `enum'
> fso.h:551: error: ISO C++ forbids declaration of `new_state' with no type

Ok, gcc just got more paranoid. The patch is really quite simple,

Index: fso.h
===================================================================
RCS file: /afs/cs/project/coda-src/cvs/coda/coda-src/venus/fso.h,v
retrieving revision 4.64
diff -u -u -r4.64 fso.h
--- fso.h	5 Mar 2004 21:15:53 -0000	4.64
+++ fso.h	25 Jun 2004 22:13:34 -0000
@@ -539,7 +539,7 @@
     void DetachHdbBindings();
     void DetachHdbBinding(binding *, int =0);
     int PredetermineFetchState(int, int);
-    void SetFetchAllowed(enum HoardFetchState new_state)
+    void SetFetchAllowed(HoardFetchState new_state)
         { FetchAllowed = new_state; }
     int IsFetchAllowed()
         { if (FetchAllowed == HF_Fetch) 
@@ -547,7 +547,7 @@
           else 
               return 0; 
         }
-    void SetAskingAllowed(enum HoardAskState new_state)
+    void SetAskingAllowed(HoardAskState new_state)
         { AskingAllowed = new_state; }
     int IsAskingAllowed()
         { if (AskingAllowed == HA_Ask)
